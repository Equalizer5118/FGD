@PointClass base(BaseEntityPoint, RenderFields, SystemLevelChoice) 
	studio("models/editor/axis_helper_white.mdl")
	sprite()
	color(20 140 20)
	sphere(GlowProxySize)
= env_sprite: "An entity that controls the drawing of a sprite in the world."
	[
	framerate(float) : "Framerate" : "10.0" : "Rate at which the sprite should animate, if at all."
	model(sprite) : "Sprite Name" : "sprites/glow01.vmt" : "Material of the sprite to be drawn."
	scale(float) : "Scale" : 0.25 : "Scale multiplier of the sprite."
	spawnflags(flags)  =
		[
		1: "Start on" : 0
		2: "Play Once" : 0
		]
		
	rendermode[engine](integer) : "Render Mode" : 9
	rendermode(choices) : "Render Mode" : 9 : "Specify the sprite rendering behaviour." =
		[
		3: "Glow"
		9: "World Space Glow"
		0: "Normal"
		1: "Color"
		2: "Texture"
		4: "Solid"
		5: "Additive"
		7: "Additive Fractional Frame"
		10: "Don't Render"
		]

	UseClientsideAnimation[engine](integer) : "Use Clientside Animation?" : 1 : "Should this sprite animate on the client or the server? Sprites can become costly networking wise and can cause lag when used in large numbers in serverside animation mode, so only set a sprite to server if you need every player to see the exact same sprite frame at any time."
	UseClientsideAnimation[KZ](choices) : "Use Clientside Animation?" : 1 : "Should this sprite animate on the client or the server? Sprites can become costly networking wise and can cause lag when used in large numbers in serverside animation mode, so only set a sprite to server if you need every player to see the exact same sprite frame at any time." =
		[
		1 : "Animate on the client."
		2 : "Animate on the server."
		]

	glowproxysize(float) : "Size of Glow Proxy Geometry." : "2.0" : "Size of the glow to be rendered for visibility testing. " + 
		"Must be larger than the distance from the sprite center to empty space. " + 
		"So if this glow is inside geometry (like a light bulb), set this value to be bigger than the bulb's radius. " +
		"Any time a sphere of this radius would be visible (poking through any nearby geometry), the glow will be rendered."
	hdrcolorscale(float) : "HDR color scale." : "0.7" : "float value to multiply sprite color by when running in HDR mode."

	// Inputs
	input ColorRedValue(float) : "Sets the red color channel's value (0 - 255)."
	input ColorGreenValue(float) : "Sets the green color channel's value (0 - 255)."
	input ColorBlueValue(float) : "Sets the blue color channel's value (0 - 255)."
	input SetScale(float) : "Set the sprite's scale (0 - 8.0)."
	input HideSprite(void) : "Hide the sprite. Won't be drawn until the 'ShowSprite' input is received."
	input ShowSprite(void) : "Show the sprite."
	input ToggleSprite(void) : "Toggle the sprite between hidden and shown."

	@resources []
	]
