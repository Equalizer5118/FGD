@SolidClass base(Trigger)
= trigger_multiple: "A trigger volume that can be triggered multiple times."
	[
	wait[-KZ](float) : "Delay Before Reset" : 1 : "Amount of time, in seconds, after an initial touch that the trigger_multiple will fire OnTrigger again (if they're still touching). " +
		"If set to -1, it will never trigger again (in which case you should just use a trigger_once). If set to 0, it will be reset to 0.2 seconds. " +
		"This only affects the OnTrigger output, not OnStartTouch/OnEndTouch and friends."
	wait[KZ](float) : "Delay Before Reset" : 0.1 : "Amount of time, in seconds, after the initial touch that the trigger_multiple will fire OnTrigger again. " +
		"If set to -1, it will never trigger again (in which case you should just use a trigger_once). If set to 0, it will be reset to 0.2 seconds." +
		"This only affects the OnTrigger output, not OnStartTouch/OnEndTouch and friends."

	entireteam[engine](integer) : "Entire Team Number" : 0
	entireteam[L4D, L4D2](choices) : "Entire Team Number" : 0 : "If the entire team is touching, fire OnEntireTeamStartTouch." =
		[
		0: "None"
		2: "Survivor"
		3: "Infected"
		]

	allowincap[L4D, L4D2](boolean) : "Incapacitated players can trigger" : 0
	allowghost[L4D, L4D2](boolean) : "Ghost players can trigger" : 0

	spawnflags[KZ](flags) =
	[
		2048: "Only activate once per player" : 0
	]	 

	// Outputs
	output OnTrigger(void) : "Fired repeatedly whenever the trigger is activated, and the wait time has expired."
	output OnEntireTeamStartTouch[L4D, L4D2](void) : "Fired when an entire team starts touching the trigger."
	output OnEntireTeamEndTouch[L4D, L4D2](void) : "Fired when an entire team stops touching the trigger."

	@resources []
	]
